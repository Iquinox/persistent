name: CI
on:
  push:
    branches:
      - master
  pull_request:
    types:
      - opened
      - synchronize
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cabal: ["3.2"]
        ghc: ["8.6.5", "8.8.3", "8.10.1"]
    env:
      CONFIG: "--enable-tests --enable-benchmarks"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1.1.2
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - uses: harmon758/postgresql-action@v1
        with:
           postgresql version: '12'  # See https://hub.docker.com/_/postgres for available versions  
           postgresql user: postgres
           postgresql db: test
           # - uses: mirromutth/mysql-action@v1.1
           #   with:
           #     mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
           #     mysql database: 'test' # Optional, default value is "test". The specified database which will be create
           #     mysql user: 'test' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
           #     mysql password: 'test' # Required if "mysql user" exists. The password for the "mysql user"
      - name: Create MySQL
        run: |
          mysql -uroot -proot -e "CREATE DATABASE test;"
          mysql -uroot -proot -e "CREATE USER 'test'@'localhost' IDENTIFIED BY 'test';"
          mysql -uroot -proot -e "GRANT ALL PRIVILEGES ON *.* TO 'test'@'localhost';"
          mysql -uroot -proot -e "FLUSH PRIVILEGES;"
      - run: cabal v2-update
      - run: cabal v2-freeze $CONFIG
      - uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.ghc }}-
      - run: cabal v2-build all $CONFIG
      - run: cabal v2-test all $CONFIG
      - run: cabal v2-haddock all $CONFIG
      - run: cabal v2-sdist all
